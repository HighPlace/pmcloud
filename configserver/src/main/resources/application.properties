spring.application.name=configserver
# 配置gitlab仓库的地址
spring.cloud.config.server.git.uri=https://github.com/HighPlace/pmcloud.git
# gitlab仓库地址下的相对地址，可以配置多个用,分割
spring.cloud.config.server.git.searchPaths=configdata
#spring.cloud.config.server.git.username=sihan2
#spring.cloud.config.server.git.password=MYPASSWORD

#spring.profiles.active=native
server.port=8888

security.user.name=config
security.user.password=pcloud2017

#作为Eureka客户端，也注册服务
#服务注册中心地址，多个使用,分割
eureka.client.serviceUrl.defaultZone=http://172.18.122.219:8761/eureka

#自定义实例ID,random.value是随机值，可以确保唯一性。Spring Cloud里面要求实例ID是唯一的
eureka.instance.instanceId=${spring.application.name}:${random.value}
#显示IP地址
eureka.instance.prefer-ip-address=true
#设置拉取服务注册信息时间，默认60s  如果要迅速获取服务注册状态，可以缩小该值。比如：网关接口启动需要马上调用
eureka.client.registry-fetch-interval-seconds=30
#指定续约更新频率，默认是30s  可以解决Eureka注册服务慢的问题，注意：在生产中，最好坚持使用默认值，因为在服务器内部有一些计算，他们对续约做出假设
eureka.instance.lease-renewal-interval-in-seconds=15
#置过期剔除时间，默认90s 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间
#如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。该值至少应该大于leaseRenewalIntervalInSeconds
eureka.instance.lease-expiration-duration-in-seconds=45

